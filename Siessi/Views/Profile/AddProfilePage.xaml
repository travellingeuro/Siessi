<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="Siessi.Views.Profile.AddProfilePage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:combobox="clr-namespace:Syncfusion.XForms.ComboBox;assembly=Syncfusion.SfComboBox.XForms"
    xmlns:ListCollection="clr-namespace:System.Collections.Generic;assembly=mscorlib"
    xmlns:inputLayout="clr-namespace:Syncfusion.XForms.TextInputLayout;assembly=Syncfusion.Core.XForms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:badge="clr-namespace:Syncfusion.XForms.BadgeView;assembly=Syncfusion.SfBadgeView.XForms"
    xmlns:buttons="clr-namespace:Syncfusion.XForms.Buttons;assembly=Syncfusion.Buttons.XForms"
    xmlns:control="clr-namespace:Siessi.Controls"
    xmlns:converter="clr-namespace:Siessi.Converters"
    xmlns:sfavatar="clr-namespace:Syncfusion.XForms.AvatarView;assembly=Syncfusion.Core.XForms"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    xmlns:viewModel="clr-namespace:Siessi.ViewModels.Profile" 
    xmlns:gradient="clr-namespace:Syncfusion.XForms.Graphics;assembly=Syncfusion.Core.XForms"
    Title="{Binding Title}"
    BackgroundColor="{DynamicResource Gray-White}"
    NavigationPage.HasNavigationBar="False">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converter:BooleanToColorConverter x:Key="ColorConverter" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </ContentPage.Resources>

    <!--  Binding context for Profile Page  -->
    <ContentPage.BindingContext>
        <viewModel:AddProfileViewModel />
    </ContentPage.BindingContext>

    <ContentPage.Content>
        <ScrollView>

            <StackLayout Padding="16" Spacing="16">

                <xct:CameraView
                x:Name="cameraView"
                CaptureMode="Photo"
                CameraOptions="Front"
                FlashMode="Off" 
                Zoom="1.5"
                 MinimumWidthRequest="250"
                IsVisible="{Binding ShowPictureViewer}"
                HorizontalOptions="CenterAndExpand"                 
                HeightRequest="200"                      
                VerticalOptions="FillAndExpand">
                    <xct:CameraView.Behaviors>
                        <xct:EventToCommandBehavior EventName="MediaCaptured"
                                                    Command="{Binding PictureTakenCommand}"/>
                    </xct:CameraView.Behaviors>
                </xct:CameraView>
                <buttons:SfButton
                    x:Name="doCameraThings"
                    Margin="0,16,0,0"
                    HorizontalOptions="Center"
                    IsVisible="{Binding ShowPictureViewer}"
                    Style="{StaticResource SfButtonStyle}"
                    WidthRequest="200"                         
                    Command="{Binding ShutterCommand, Source={x:Reference cameraView}}"
                    IsEnabled="True"
                    Text="Click"> 
                </buttons:SfButton>

                <!--To display the Avatar with add icon-->
                <badge:SfBadgeView
                    Padding="0"
                    HeightRequest="90"
                    HorizontalOptions="Center"
                    VerticalOptions="Center"
                    WidthRequest="90">
                    <badge:SfBadgeView.Content>

                        <!--Avatar view to display the profile picture-->
                        <sfavatar:SfAvatarView
                            Padding="13"
                            BackgroundColor="{DynamicResource Gray-200}"
                            BorderWidth="0"
                            ContentType="Custom"                            
                            CornerRadius="45"
                            HeightRequest="90"
                            HorizontalOptions="Center"
                            VerticalOptions="Center"
                            WidthRequest="90"
                            ImageSource="{Binding UserImage}">
                        </sfavatar:SfAvatarView>
                    </badge:SfBadgeView.Content>

                    <!--Badge setting to display the add icon above the profile picture-->
                    <badge:SfBadgeView.BadgeSettings>
                        <badge:BadgeSetting
                            BackgroundColor="{DynamicResource Gray-100}"
                            BadgeAnimation="None"
                            BadgeIcon="Add"
                            BadgePosition="BottomRight"                            
                            BadgeType="None"
                            FontSize="15"
                            Stroke="{DynamicResource Gray-White}"
                            StrokeWidth="4"
                            TextColor="{DynamicResource Gray-600}"
                            TextPadding="7"
                            Offset="-5,-10" />
                    </badge:SfBadgeView.BadgeSettings>
                    <badge:SfBadgeView.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ChangePictureCommand}"/>
                    </badge:SfBadgeView.GestureRecognizers>
                </badge:SfBadgeView>

                <!--  Displaying the label of Add profile picture below to the badgeview  -->
                <Label
                    FontFamily="{DynamicResource Montserrat-Medium}"
                    FontSize="14"
                    HorizontalOptions="Center"
                    Text="Cambia tu foto de perfil"                    
                    TextColor="{DynamicResource Gray-700}">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ChangePictureCommand}"/>
                    </Label.GestureRecognizers>
                    
                </Label>

                <!--  First name entry with border  -->
                <inputLayout:SfTextInputLayout 
                            Hint="Tu nombre completo"
                            Style="{StaticResource SfTextInputLayout}">
                    <control:BorderlessEntry
                        x:Name="FirstNameEntry"                       
                        Text="{Binding Profile.Name}"
                        Style="{StaticResource EntryTextStyle}" />
                </inputLayout:SfTextInputLayout>

                <!--  Birth date entry with border  -->
                <inputLayout:SfTextInputLayout
                               Hint="Fecha de nacimiento"
                               Style="{StaticResource SfTextInputLayout}">
                    <DatePicker
						Date="{Binding Profile.BirthDate}"
						FontFamily="{StaticResource Montserrat-Regular}"
						FontSize="16"
						Format="dd MMM yyyy">
                    </DatePicker>
                </inputLayout:SfTextInputLayout>

                <!--Gender entry-->
                <inputLayout:SfTextInputLayout
                    Hint="Sexo"
                    Style="{StaticResource SfTextInputLayout}">
                    <combobox:SfComboBox x:Name="ComboBoxGender"
                                         BackgroundColor="Transparent"
                                         FontFamily="{StaticResource Montserrat-Regular}"
                                         DropDownItemHeight="{OnPlatform Android=50}"
                                         DropDownTextSize="18"
                                         HeightRequest="{OnPlatform Android=50}"
                                         SelectedItem="{Binding Profile.Gender, Mode=TwoWay}"                                         
                                         VerticalOptions="Start">
                        <combobox:SfComboBox.ComboBoxSource>
                            <ListCollection:List x:TypeArguments="x:String">
                                <x:String>Mujer</x:String>
                                <x:String>Hombre</x:String>
                            </ListCollection:List>
                        </combobox:SfComboBox.ComboBoxSource> 
                    </combobox:SfComboBox>
                </inputLayout:SfTextInputLayout>


                <!--Password entry-->
                <Label Text="Mínimo 4 caracteres" TextColor="{DynamicResource Red}" IsVisible="False">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding Source={x:Reference PasswordBehaviour},
                                                       Path=IsNotValid}"
                                                       Value="True">
                            <Setter Property="IsVisible" Value="True" />                                                    
                        </DataTrigger>
                    </Label.Triggers>
                </Label>                
                <inputLayout:SfTextInputLayout 
                            IsVisible="{Binding ShowPasswordEntry}"
                            Hint="Contraseña"
                            EnablePasswordVisibilityToggle="True"
                            Style="{StaticResource SfTextInputLayout}">
                    <control:BorderlessEntry
                        x:Name="PasswordEntry"
                        IsPassword="True"
                        Placeholder="Mínimo 4 caracteres" 
                        Text="{Binding Profile.Password,Mode=OneTime}"
                        Style="{StaticResource EntryTextStyle}" >
                        <control:BorderlessEntry.Behaviors>
                            <xct:CharactersValidationBehavior x:Name="PasswordBehaviour"                                                                
                                                              InvalidStyle="{StaticResource InvalidEntryStyle}"
                                                              MinimumCharacterCount="4"
                                                              Flags="ValidateOnValueChanging"/>
                        </control:BorderlessEntry.Behaviors>
                    </control:BorderlessEntry>
                </inputLayout:SfTextInputLayout>

                <!--Confirm Password entry-->
                <inputLayout:SfTextInputLayout 
                            IsVisible="{Binding ShowPasswordEntry}"
                            Hint="Repite contraseña"
                            EnablePasswordVisibilityToggle="True"
                            Style="{StaticResource SfTextInputLayout}">
                    <control:BorderlessEntry                        
                        x:Name="RepeatPassword"  
                        IsPassword="True"
                        Text="{Binding Profile.Password}"
                        Style="{StaticResource EntryTextStyle}">
                        <control:BorderlessEntry.Behaviors>
                            <xct:RequiredStringValidationBehavior x:Name="PasswordMatchBehavior"                                                                  
                                                                  Flags="ValidateOnValueChanging"                                                                  
                                                                  InvalidStyle="{StaticResource InvalidEntryStyle}"
                                                                  RequiredString="{Binding Source={x:Reference PasswordEntry},Path=Text}"/>
                        </control:BorderlessEntry.Behaviors>
                    </control:BorderlessEntry>
                </inputLayout:SfTextInputLayout>
                
                <Label Text="Comprueba las contraseñas" TextColor="{DynamicResource Red}" IsVisible="False">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding Source={x:Reference PasswordMatchBehavior},
                                                       Path=IsNotValid}"
                                                       Value="True">
                            <Setter Property="IsVisible" Value="True" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
                
                <!--Change Password Button-->
                <buttons:SfButton
                    Margin="0,16,0,0"                    
                    HorizontalOptions="Center"
                    Style="{StaticResource SfButtonStyle}"
                    Text="Cambia la contraseña"
                    Command="{Binding ChangePasswordComand }"
                    IsVisible="{Binding ShowChangePassword}"
                    WidthRequest="200" />
                
                <!--Separator-->
                <BoxView   
                 Style="{StaticResource SeparatorStyle}"></BoxView>
                
                
                <!--Update and Save Button-->
                <buttons:SfButton
                    Margin="0,16,0,0"                    
                    HorizontalOptions="Center"
                    Style="{StaticResource SfButtonStyle}"
                    Text="{Binding SyncCreateText}"
                    Command="{Binding UpdateCommand}"
                    WidthRequest="200"
                    IsEnabled="False">
                    <buttons:SfButton.BackgroundGradient>
                                      <gradient:SfLinearGradientBrush>
                                        <gradient:SfLinearGradientBrush.GradientStops>
                                            <gradient:SfGradientStop Offset="0" Color="{DynamicResource Gray-200}" />
                                            <gradient:SfGradientStop Offset="1" Color="{DynamicResource Gray-300}" />
                                        </gradient:SfLinearGradientBrush.GradientStops>
                                    </gradient:SfLinearGradientBrush>                      
                    </buttons:SfButton.BackgroundGradient>
                    <buttons:SfButton.Triggers>
                        <DataTrigger TargetType="buttons:SfButton"
                                     Binding="{Binding Source={x:Reference PasswordMatchBehavior},
                                                       Path=IsNotValid}"
                                                       Value="False">
                            <Setter Property="IsEnabled" Value="True"></Setter>
                            <Setter Property="BackgroundGradient">
                                <Setter.Value>
                                    <gradient:SfLinearGradientBrush>
                                        <gradient:SfLinearGradientBrush.GradientStops>
                                            <gradient:SfGradientStop Offset="0" Color="{DynamicResource PrimaryColor}" />
                                            <gradient:SfGradientStop Offset="1" Color="{DynamicResource PrimaryGradient}" />
                                        </gradient:SfLinearGradientBrush.GradientStops>
                                    </gradient:SfLinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </buttons:SfButton.Triggers>                    
                </buttons:SfButton>
            </StackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>